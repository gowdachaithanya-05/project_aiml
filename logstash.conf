# input {
#   file {
#     path => "/usr/share/logstash/logs/*.log"  # Path to log files
#     start_position => "beginning"
#     sincedb_path => "/dev/null"  # Prevents storing file position
#     type => "log"
#   }
# }

# filter {
#   grok {
#     match => { "message" => "%{TIMESTAMP_ISO8601:timestamp} - %{LOGLEVEL:loglevel} - %{GREEDYDATA:logmessage}" }
#   }

#   date {
#     match => [ "timestamp", "ISO8601" ]
#     target => "@timestamp"
#   }
# }

# output {
#   elasticsearch {
#     hosts => ["http://elasticsearch:9200"]  # Elasticsearch host
#     index => "project_logs"  # Elasticsearch index name
#   }
#   stdout { codec => rubydebug }  # Output to console for debugging
# }

input {
  file {
    path => "/usr/share/logstash/logs/document_service.log"  # Path to log files
    start_position => "beginning"
    sincedb_path => "/dev/null"  # Prevents storing file position
    type => "log"
  }
}

filter {
  grok {
    match => { 
      "message" => "%{YEAR}-%{MONTHNUM}-%{MONTHDAY} %{HOUR}:%{MINUTE}:%{SECOND},%{INT:millis} - %{LOGLEVEL:loglevel} - %{GREEDYDATA:logmessage}"
    }
  }

  mutate {
    add_field => { "service" => "document_service" }
    add_field => { "log_type" => "websocket" }
  }

  # Correct the date filter to use the grok pattern's extracted timestamp
  date {
    match => [ "message", "YYYY-MM-dd HH:mm:ss,SSS" ]
    target => "@timestamp"
  }
}


output {
  elasticsearch {
    hosts => ["http://elasticsearch:9200"]
    index => "project_logs"
  }
  stdout { codec => rubydebug }
}
