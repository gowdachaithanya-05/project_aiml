services:
  app:
    build: .
    command: uvicorn app:app --host 0.0.0.0 --port 8000
    ports:
      - "8000:8000"
    volumes:
      - ./uploads:/app/uploads
    environment:
      OPENAI_API_KEY: "${OPENAI_API_KEY}"
      DATABASE_URL: "postgresql://postgres:7722@db:5432/doc_db"
    depends_on:
      db:
        condition: service_healthy
      elasticsearch:
        condition: service_started

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.10.1
    environment:
      discovery.type: "single-node"
    ports:
      - "9200:9200"
    volumes:
      - esdata:/usr/share/elasticsearch/data

  logstash:
    image: docker.elastic.co/logstash/logstash:7.10.1
    volumes:
      - ./logstash.conf:/usr/share/logstash/pipeline/logstash.conf
      - ./logs:/usr/share/logstash/logs
    depends_on:
      - elasticsearch
    ports:
      - "5000:5000"

  kibana:
    image: docker.elastic.co/kibana/kibana:7.10.1
    ports:
      - "5601:5601"
    depends_on:
      - elasticsearch
    environment:
      ELASTICSEARCH_HOSTS: "http://elasticsearch:9200"

  db:
    image: postgres:latest
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 7722
      POSTGRES_DB: doc_db
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  apm-server:
    image: docker.elastic.co/apm/apm-server:7.10.1
    environment:
      output.elasticsearch.hosts: "http://elasticsearch:9200"
    ports:
    - "8200:8200"
    depends_on:
    - elasticsearch


volumes:
  esdata:
    driver: local
  postgres_data:
    driver: local


networks:
  elastic:
    driver: bridge